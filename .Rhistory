num_reagents <- length(reagent_layout)
delay_header <- c(num_reagents)
for (i in c(1:num_reagents)){
delay_header <- c(delay_header,c(0,""))
}
outfile=file(outpath,open="w",encoding = "UTF-8")
write.table(c("[ Version: 5 ]"),file=outfile,append=FALSE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(c("breakaway_pcr_96.pd.txt"),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c(1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
for (name in names(reagent_layout)){
write.table(t(c(name,"","Normal")),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c("Well",1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(reagent_layout[[name]],file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
}
close(outfile)
}
reagent_df_to_reagent_layout <- function(reagent_df,platetype="96-well"){
if (platetype =="96-well"){
nrows=8
ncols=12
} else {
stop("Function can only handle 96 well plates right now")
}
n_reagents <- length(names(reagent_df))
reagentnames <- names(reagent_df)
reagent_layout <- list()
for (i in 1:n_reagents){
plate <- matrix(0,nrows,ncols)
plate[1:nrow(reagent_df)] <- reagent_df[,i]
plate <- format(plate,nsmall=1,trim=TRUE)
reagent_layout <- append(reagent_layout,I(list(plate)))
}
names(reagent_layout) <- reagentnames
return(reagent_layout)
}
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit)]
print(reagent_df)
return(reagent_df)
}
test_reagents <- data.frame(A=matrix(0,96,1))
empty_plate <- matrix(0,8,12)
test_reagents$A <- rep(1,96)
test_reagents$B <- rep(1,96)
test_reagents$C <- rep(1,96)
test_reagents$A[1:9] <- c(1:9)
test_reagents$B[25:33] <- c(1:9)
wellnames <- c()
letters <- c("A","B","C","D","E","F","G","H")
numbers <- as.character(c(1:12))
for (i in numbers){
for (j in letters){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(test_reagents) <- c("ReagentA","ReagentB","ReagentC")
test_reagents$Well <- wellnames[testsample]
test_reagents <- test_reagents[1:50,]
reagent_df <- design_df_to_reagent_df(test_reagents)
reagent_layout <- reagent_df_to_reagent_layout(reagent_df)
export_mantis_worklist("mantis_function.dl.txt",reagent_layout)
x[c(1:4-2)]
x[c(1:(4-2))]
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit)]
print(reagent_df)
return(reagent_df)
}
reagent_df <- design_df_to_reagent_df(test_reagents)
export_mantis_worklist <- function(outpath,reagent_layout){
num_reagents <- length(reagent_layout)
delay_header <- c(num_reagents)
for (i in c(1:num_reagents)){
delay_header <- c(delay_header,c(0,""))
}
outfile=file(outpath,open="w",encoding = "UTF-8")
write.table(c("[ Version: 5 ]"),file=outfile,append=FALSE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(c("breakaway_pcr_96.pd.txt"),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c(1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
for (name in names(reagent_layout)){
write.table(t(c(name,"","Normal")),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c("Well",1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(reagent_layout[[name]],file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
}
close(outfile)
}
reagent_df_to_reagent_layout <- function(reagent_df,platetype="96-well"){
if (platetype =="96-well"){
nrows=8
ncols=12
} else {
stop("Function can only handle 96 well plates right now")
}
n_reagents <- length(names(reagent_df))
reagentnames <- names(reagent_df)
reagent_layout <- list()
for (i in 1:n_reagents){
plate <- matrix(0,nrows,ncols)
plate[1:nrow(reagent_df)] <- reagent_df[,i]
plate <- format(plate,nsmall=1,trim=TRUE)
reagent_layout <- append(reagent_layout,I(list(plate)))
}
names(reagent_layout) <- reagentnames
return(reagent_layout)
}
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit-1)]
print(reagent_df)
return(reagent_df)
}
test_reagents <- data.frame(A=matrix(0,96,1))
empty_plate <- matrix(0,8,12)
test_reagents$A <- rep(1,96)
test_reagents$B <- rep(1,96)
test_reagents$C <- rep(1,96)
test_reagents$A[1:9] <- c(1:9)
test_reagents$B[25:33] <- c(1:9)
wellnames <- c()
letters <- c("A","B","C","D","E","F","G","H")
numbers <- as.character(c(1:12))
for (i in numbers){
for (j in letters){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(test_reagents) <- c("ReagentA","ReagentB","ReagentC")
test_reagents$Well <- wellnames[testsample]
test_reagents <- test_reagents[1:50,]
reagent_df <- design_df_to_reagent_df(test_reagents)
reagent_layout <- reagent_df_to_reagent_layout(reagent_df)
export_mantis_worklist("mantis_function.dl.txt",reagent_layout)
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,(c(1:(ncol(ordered_design_df)-omit-1))]
print(reagent_df)
return(reagent_df)
}
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit-1))]
print(reagent_df)
return(reagent_df)
}
reagent_df <- design_df_to_reagent_df(test_reagents)
export_mantis_worklist <- function(outpath,reagent_layout){
num_reagents <- length(reagent_layout)
delay_header <- c(num_reagents)
for (i in c(1:num_reagents)){
delay_header <- c(delay_header,c(0,""))
}
outfile=file(outpath,open="w",encoding = "UTF-8")
write.table(c("[ Version: 5 ]"),file=outfile,append=FALSE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(c("breakaway_pcr_96.pd.txt"),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c(1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(delay_header),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
for (name in names(reagent_layout)){
write.table(t(c(name,"","Normal")),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(t(c("Well",1)),file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
write.table(reagent_layout[[name]],file=outfile,append=TRUE,row.names=FALSE,col.names=FALSE,na="",quote=FALSE,fileEncoding = "UTF-8",sep="\t",eol="\r\n")
}
close(outfile)
}
reagent_df_to_reagent_layout <- function(reagent_df,platetype="96-well"){
if (platetype =="96-well"){
nrows=8
ncols=12
} else {
stop("Function can only handle 96 well plates right now")
}
n_reagents <- length(names(reagent_df))
reagentnames <- names(reagent_df)
reagent_layout <- list()
for (i in 1:n_reagents){
plate <- matrix(0,nrows,ncols)
plate[1:nrow(reagent_df)] <- reagent_df[,i]
plate <- format(plate,nsmall=1,trim=TRUE)
reagent_layout <- append(reagent_layout,I(list(plate)))
}
names(reagent_layout) <- reagentnames
return(reagent_layout)
}
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,ncol(design_df)-1]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit-1))]
print(reagent_df)
return(reagent_df)
}
test_reagents <- data.frame(A=matrix(0,96,1))
empty_plate <- matrix(0,8,12)
test_reagents$A <- rep(1,96)
test_reagents$B <- rep(1,96)
test_reagents$C <- rep(1,96)
test_reagents$A[1:9] <- c(1:9)
test_reagents$B[25:33] <- c(1:9)
wellnames <- c()
letters <- c("A","B","C","D","E","F","G","H")
numbers <- as.character(c(1:12))
for (i in numbers){
for (j in letters){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(test_reagents) <- c("ReagentA","ReagentB","ReagentC")
test_reagents$Well <- wellnames[testsample]
test_reagents <- test_reagents[1:50,]
reagent_df <- design_df_to_reagent_df(test_reagents)
reagent_layout <- reagent_df_to_reagent_layout(reagent_df)
export_mantis_worklist("mantis_function.dl.txt",reagent_layout)
View(reagent_df)
rep(letters,8)
lapply(letters,rep(,8))
vapply(letters,rep,8)
rep.(letters,8)
lapply(rep,letters)
lapply(letters,rep(letters,8))
lapply(letters,8,rep)
?lapply
?rep
lapply(letters,rep,times=8)
c(letters)
c(lapply(letters,rep,times=8))
t <- lapply(letters,rep,times=8)
t[1]
q <- c(t[1:8])
q
vapply(letters,rep,times=8)
?vapply
sapply(letters,rep,times=8)
rc_test <- test_reagents[1:3,]
rc_test$Row <- order(rep(letters,12))
rc_test$Col <- rep(numbers,8)
test_reagents <- data.frame(A=matrix(0,96,1))
empty_plate <- matrix(0,8,12)
test_reagents$A <- rep(1,96)
test_reagents$B <- rep(1,96)
test_reagents$C <- rep(1,96)
test_reagents$A[1:9] <- c(1:9)
test_reagents$B[25:33] <- c(1:9)
rc_test <- test_reagents[1:3,]
test_reagents <- data.frame(A=matrix(0,96,1))
empty_plate <- matrix(0,8,12)
test_reagents$A <- rep(1,96)
test_reagents$B <- rep(1,96)
test_reagents$C <- rep(1,96)
test_reagents$A[1:9] <- c(1:9)
test_reagents$B[25:33] <- c(1:9)
rc_test <- test_reagents[,1:3]
rc_test$Row <- order(rep(letters,12))
rc_test$Col <- rep(numbers,8)
View(rc_test)
rep(letters,12)
order(rep(letters,12))
rc_test <- test_reagents[,1:3]
rc_test$Row <- rep(letters,12)[order(rep(letters,12))]
rc_test$Col <- rep(numbers,8)
View(rc_test)
rc_reagent_df <- design_df_to_reagent_df(rc_test,Well=FALSE)
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- lapply(paste(sep=""),as.character(design_df[,(ncol(design_df)-1)]),as.character(design_df[,ncol(design_df)]))
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit-1))]
print(reagent_df)
return(reagent_df)
}
rc_reagent_df <- design_df_to_reagent_df(rc_test,Well=FALSE)
design_df_to_reagent_df <- function(design_df,platetype="96-well",Well=TRUE){
if (platetype =="96-well"){
nrows=8
ncols=12
welldict <- c(1:96)
wellnames <- c()
rownames <- c("A","B","C","D","E","F","G","H")
colnames <- as.character(c(1:12))
for (i in colnames){
for (j in rownames){
wellnames <- c(wellnames,paste(j,i,sep=""))
}
}
names(welldict) <- wellnames
} else {
stop("Function can only handle 96 well plates right now")
}
omit <- 0
if (!Well){
design_df$Well <- paste(as.character(design_df[,(ncol(design_df)-1)]),as.character(design_df[,ncol(design_df)]),sep="")
omit <- 2
}
unused_wells <- setdiff(wellnames,design_df$Well)
n_unused_wells <- length(unused_wells)
expts_to_fill_plate <- data.frame(matrix(0,n_unused_wells,ncol(design_df)))
names(expts_to_fill_plate) <- names(design_df)
expts_to_fill_plate$Well <- unused_wells
design_df_filled <- rbind(design_df,expts_to_fill_plate)
ordered_design_df <- design_df_filled[order(factor(design_df_filled[,ncol(design_df_filled)],levels=wellnames)),]
print(ordered_design_df)
reagent_df <- ordered_design_df[,c(1:(ncol(ordered_design_df)-omit-1))]
print(reagent_df)
return(reagent_df)
}
rc_reagent_df <- design_df_to_reagent_df(rc_test,Well=FALSE)
View(rc_test)
rc_reagent_layout <- reagent_df_to_reagent_layout(rc_reagent_layout)
rc_reagent_layout <- reagent_df_to_reagent_layout(rc_reagent_df)
View(rc_reagent_layout)
print(rc_reagnet_layout
)
print(rc_reagent_layout)
View(rc_reagent_df)
View(rc_test)
