return(final_volume)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template)
read.csv(template)
mantis_normalize(template)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usemicromolar = TRUE)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usemicromolar = TRUE)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usemicromolar = TRUE)
mantis_normalize(template,usemicromolar = FALSE)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^9  # nmoles * L/nmol * uL/L -> uL
}
return(final_volume)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usenanomolar = FALSE)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^9  # nmoles * L/nmol * uL/L -> uL
}
return(final_volume)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usenanomolar = T)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
return(final_volume)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
mantis_normalize(template,usenanomolar = T)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep("yes",nrow(data))
can_normalize[overshot]="too concentrated"
can_normalize[toolow]="too dilute"
data$can_normalize=can_normalize
volume_to_add <- final_volume - init_volume
data$volume_to_add=volume_to_add
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
View(test)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nroww(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
View(test)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_voume[!can_normalize]=0
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_volume[!can_normalize]=0
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
View(test)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_volume[!can_normalize]=NaN
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
View(test)
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = T)
View(test)
x=c(T,F,T)
ismember(x,FALSE)
in(FALSE,x)
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_volume[!can_normalize]=NaN
data$dispense_volume=dispense_volume
if (FALSE %in% can_normalize){
warning("some samples cannot be normalized because they are either too concentrated or too dilute.")
}
dispense <- data.frame(dispense_volume,Row,Col)
dispense <- dispense[can_normalize,:]
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_volume[!can_normalize]=NaN
data$dispense_volume=dispense_volume
if (FALSE %in% can_normalize){
warning("some samples cannot be normalized because they are either too concentrated or too dilute.")
}
dispense <- data.frame(dispense_volume,Row,Col)
dispense <- dispense[can_normalize,]
names(dispense)=c("Water","Row","Col")
outfile=tools::file_path_sans_ext(input_path)
mantis_dispense(dispense,outfile,platetype=platetype)
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
tools::file_path_sans_ext(template)
setwd("/Users/BDavid/Documents/GitHub/DispenseFormulatrix")
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix")
library(DispenseFormulatrix)
?mantis_normalize
#' Normalize DNA concentrations with water using the Mantis
#'
#' @param input_path path to the normalization input template. Template can be found at https://github.com/bmdavid2/DispenseFormulatrix/blob/main/mantis_normalize_template.csv
#' @param platetype="breakaway_pcr_96" specifies the plate type. Must be one of: "96-well", "breakaway_pcr_96" , 384-well".
#' @param maxvol=200 the maximum volume allowed for the final concentration
#' @param usenanomolar=FALSE standard final concentrations are ng/ul
#' @export
#'
mantis_normalize <- function(input_path,platetype="breakaway_pcr_96",maxvol=200, usenanomolar=FALSE){
# read data from template
data=read.csv(input_path)
init_conc=data$concentration # ng/uL
init_volume <- data$volume # uL
dna_length <- data$amplicon_length # bp dsDNA
final_conc <- data$final_concentration # either ng/uL or uM
Row <- data$Row
Col <- data$Col
#calculate mass of amplicons
mass <- init_conc * init_volume  # ng dsDNA
final_volume <- mass / final_conc # uL
if (usenanomolar){
MW <- dna_length * 617.96 + 36.04 # g/mol
moles <- mass * 10^-9 /MW * 10^9   # ng * g/ng * mol/g * nmol/mol -> nmoles
final_volume <- moles / final_conc * 10^6  # nmoles * L/nmol * uL/L -> uL
}
overshot <- final_volume > maxvol
toolow <- final_volume < init_volume
can_normalize <- rep(TRUE,nrow(data))
can_normalize[overshot]=FALSE
can_normalize[toolow]=FALSE
comment <- rep("" ,nrow(data))
comment[overshot]="too concentrated"
comment[toolow]="too dilute"
data$can_normalize=can_normalize
data$comment=comment
data$final_volume=final_volume
dispense_volume <- final_volume - init_volume
dispense_volume[!can_normalize]=NaN
data$dispense_volume=dispense_volume
return(data)
}
template <- "~/Documents/GitHub/DispenseFormulatrix/test_normalize_template.csv"
test=mantis_normalize(template,usenanomolar = F)
