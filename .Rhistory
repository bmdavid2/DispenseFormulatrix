test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
dispense_list(test_design,"~/Desktop/test2",platetype = "breakaway_pcr_96")
# Test 3 ------------------------------------------------------------------
# Less than 96 experiments on the plate. Assign wells in order
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=F)
dispense_list(test_design,"~/Desktop/test3",platetype = "breakaway_pcr_96")
# Test 4 ------------------------------------------------------------------
# Less than 96 experiments on the plate. Assign wells randomly
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=T)
dispense_list(test_design,"~/Desktop/test4",platetype = "breakaway_pcr_96")
test_design[,-4]
# Forget to include "Row" column
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-4]
dispense_list(test_design,"~/Desktop/test5",platetype = "breakaway_pcr_96")
# Forget to include "Col" column
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-5]
dispense_list(test_design,"~/Desktop/test5",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(-4,-5)]
dispense_list(test_design,"~/Desktop/test7",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(1,2,3,5,4)]
dispense_list(test_design,"~/Desktop/test8",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test8",platetype = "breakaway_pcr_96")
# Test 8 ------------------------------------------------------------------
# Switch Row and Col column order
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(1,2,3,5,4)]
dispense_list(test_design,"~/Desktop/test8",platetype = "breakaway_pcr_96")
# Test9 -------------------------------------------------------------------
# Switch Row and Col information so they are reversed.
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
c(1:10)
is.element(c(1:10),c(1:12))
all(is.element(c(1:10),c(1:12)))
any(!is.element(c(1:10),c(1:12)))
roxygen2::roxygenize()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
# Test 1 ------------------------------------------------------------------
# Create a dispense list for a 96-well breakaway pcr plate with three reagents. Assign non-random wells to the design.
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=F)
dispense_list(test_design,"~/Desktop/test1",platetype = "breakaway_pcr_96")
roxygen2::roxygenize()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
# Test 1 ------------------------------------------------------------------
# Create a dispense list for a 96-well breakaway pcr plate with three reagents. Assign non-random wells to the design.
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=F)
dispense_list(test_design,"~/Desktop/test1",platetype = "breakaway_pcr_96")
# Test 2 ------------------------------------------------------------------
# Same as test one, but with randomized well locations
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
dispense_list(test_design,"~/Desktop/test2",platetype = "breakaway_pcr_96")
# Test 3 ------------------------------------------------------------------
# Less than 96 experiments on the plate. Assign wells in order
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=F)
dispense_list(test_design,"~/Desktop/test3",platetype = "breakaway_pcr_96")
# Test 4 ------------------------------------------------------------------
# Less than 96 experiments on the plate. Assign wells randomly
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=T)
dispense_list(test_design,"~/Desktop/test4",platetype = "breakaway_pcr_96")
# Test 5 ------------------------------------------------------------------
# Forget to include "Row" column
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-4]
dispense_list(test_design,"~/Desktop/test5",platetype = "breakaway_pcr_96")
# Forget to include "Col" column
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-5]
dispense_list(test_design,"~/Desktop/test6",platetype = "breakaway_pcr_96")
# Forget to include "Row" and "Col" columns
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(-4,-5)]
dispense_list(test_design,"~/Desktop/test7",platetype = "breakaway_pcr_96")
# Switch Row and Col column order
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(1,2,3,5,4)]
dispense_list(test_design,"~/Desktop/test8",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
paste("test",c("A","B","C"))
cat("test",c("A","B","C"))
roxygen2::roxygenize()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
roxygen2::roxygenize()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
x=1
"test $x"
test $x$""
"test $x$"
"test %x"
roxygen2::roxygenise()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
roxygen2::roxygenise()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
dispense_list(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design[1,] <- test_design[2,]
dispense_list(test_design,"~/Desktop/test10",platetype = "breakaway_pcr_96")
View(test_design)
roxygen2::roxygenise()
devtools::install_github("https://github.com/bmdavid2/DispenseFormulatrix",force=T)
library(DispenseFormulatrix)
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=F)
mantis_dispense(test_design,"~/Desktop/test1",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
mantis_dispense(test_design,"~/Desktop/test2",platetype = "breakaway_pcr_96")
# Less than 96 experiments on the plate. Assign wells in order
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=F)
mantis_dispense(test_design,"~/Desktop/test3",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- test_design[1:48,]
test_design <- assign_wells(test_design,randomize=T)
mantis_dispense(test_design,"~/Desktop/test4",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-4]
mantis_dispense(test_design,"~/Desktop/test5",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,-5]
mantis_dispense(test_design,"~/Desktop/test6",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(-4,-5)]
mantis_dispense(test_design,"~/Desktop/test7",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design <- test_design[,c(1,2,3,5,4)]
mantis_dispense(test_design,"~/Desktop/test8",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
names(test_design) <- c("A","B","C","Col","Row")
mantis_dispense(test_design,"~/Desktop/test9",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
test_design[1,] <- test_design[2,]
mantis_dispense(test_design,"~/Desktop/test10",platetype = "breakaway_pcr_96")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,randomize=T)
mantis_dispense(test_design,"~/Desktop/test11",platetype = "96-well")
test_design <- data.frame(A=matrix(0,96,1))
test_design$A <- rep(1,96)
test_design$B <- rep(1,96)
test_design$C <- rep(1,96)
test_design$A[1:9] <- c(1:9)
test_design$B[25:33] <- c(1:9)
test_design <- assign_wells(test_design,platetype="384-well",randomize=T)
mantis_dispense(test_design,"~/Desktop/test12",platetype = "384-well")
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(Probe~(probes-500)/(300/1.682),
RNA~(totalRNA-250)/(150/1.682),
Bead~(beads-100)/(50/1.682)))
library(rsm)
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(Probe~(probes-500)/(300/1.682),
RNA~(totalRNA-250)/(150/1.682),
Bead~(beads-100)/(50/1.682)))
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(probes-500)/(300/1.682),
B~(totalRNA-250)/(150/1.682),
C~(beads-100)/(50/1.682)))
View(design)
help(ccd)
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A_coded~(A-500)/(300/1.682),
B_coded~(B-250)/(150/1.682),
C_coded~(C-100)/(50/1.682)))
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(A-500)/(300/1.682),
B~(B-250)/(150/1.682),
C~(C-100)/(50/1.682)))
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(Aa-500)/(300/1.682),
B~(Bb-250)/(150/1.682),
C~(Cc-100)/(50/1.682)))
View(design)
View(design)
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(RNA-500)/(300/1.682),
B~(Temp-250)/(150/1.682),
C~(Time-100)/(50/1.682)))
View(design)
ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(RNA-500)/(300/1.682),
B~(Temp-250)/(150/1.682),
C~(Time-100)/(50/1.682)))
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(RNA-500)/(300/1.682),
B~(Temp-250)/(150/1.682),
C~(Time-100)/(50/1.682)))
View(design)
library(rsm)
library(DispenseFormulatrix)
design <- assign_wells(design)
View(design)
View(design)
View(design)
View(design)
l <- list()
l$A <- c(1,2,3,4,5)
l <- list()
l$A <- c(1,2,3,4,5)
names(l$A) <- c("-1.68","-1","0","1","1.68")
l$A["1"]
l$A
l$A["1"]+l$A["0"]
list(c(1,2,3,4),c(1,2),c(1,2,3))
x <- list(c(1,2,3,4),c(1,2),c(1,2,3))
x[1]
x[1][2]
x[1,2]
x[1]
x[[1]][1]
names(x) <- c("A","B","C")
x
x$"C"
x$"D"
design
View(design)
design$A
design[,"A"]
design$RNA
design[,A]
m <- "A"
design$m
design[[m]]
design$A
regs <- c("A","B","C")
get_factor_levels <- function(reagent,coded_design){
levels <- sort(unique(coded_design[[reagent]]))
return(levels)
}
get_factor_levels("A",design)
get_factor_levels(regs,design)
vapply(regs,get_factor_levels,coded_design=design)
lapply(regs,get_factor_levels,coded_design=design)
get_factor_levels <- function(reagent,design){
levels <- sort(unique(design[[reagent]]))
return(levels)
}
